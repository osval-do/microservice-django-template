apiVersion: apps/v1
kind: List
items:

  # Microservice django app
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: microservice-depl
    spec:
      replicas: 1
      selector:
        matchLabels:            
          app: microservice
      template:
        metadata:
          labels:
            app: microservice
        spec:
          containers:
            - name: microservice
              # Change the following line to the path to obtain the image for the cluster
              # (which can be docker hub or a personal docker repository):
              image: aldo7/microservice-django-template:latest
              envFrom:
                - secretRef:
                    name: m8e-settings
              env:
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: m8e-settings
                      key: DATABASE_PASSWORD
                - name: DATABASE_URL
                  value: "postgres://postgres:$(POSTGRES_PASSWORD)@microservice-db-cip:5432/django_db"
                - name: ALLOWED_HOSTS
                # In production this value should be the host:
                  value: "*"
                - name: DEBUG
                  value: "True"

  # Microservice node port
  - kind: Service
    apiVersion: v1
    metadata:
      name: microservice-srv
    spec:
      type: NodePort
      selector:
        app: microservice
      ports:
        - name: microservice
          protocol: TCP      
          port: 8000
          targetPort: 8000

  # Microservice cluster ip
  - kind: Service
    apiVersion: v1
    metadata:
      name: microservice-cip
    spec:
      type: ClusterIP
      selector:
        app: microservice
      ports:
        - name: microservice
          protocol: TCP
          port: 4000
          targetPort: 4000

  # Database volume
  - kind: PersistentVolume
    apiVersion: v1
    metadata:
      name: microservice-db-vol
    spec:
      storageClassName: manual
      capacity:
        storage: 4Gi
      accessModes:
        - ReadWriteMany
      hostPath:
        # Note: This path should be unique for your microservice in minikube:
        path: "/mnt/data/microservice"

  # Database volume claim
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: microservice-db-pvc
    spec:
      storageClassName: manual
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 4Gi

  # Microservice DB (Postgres)
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: microservice-db-depl
    spec:
      replicas: 1
      selector:
        matchLabels:            
          app: microservice-db
      template:
        metadata:
          labels:
            app: microservice-db
        spec:
          containers:
            - name: microservice-db
              image: postgres:14.5
              imagePullPolicy: "IfNotPresent"
              ports:
                - containerPort: 5432
              env:
                - name: POSTGRES_DB
                  value: django_db
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: m8e-settings
                      key: DATABASE_PASSWORD
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: postgredb
          volumes:
            - name: postgredb
              persistentVolumeClaim:
                claimName: microservice-db-pvc

  # Microservice DB cluster ip
  - kind: Service
    apiVersion: v1
    metadata:
      name: microservice-db-cip
    spec:
      type: ClusterIP
      selector:
        app: microservice-db
      ports:
        - name: microservice-db
          protocol: TCP
          port: 5432
          targetPort: 5432

  # Microservice ingress config
  - kind: Ingress
    apiVersion: networking.k8s.io/v1  
    metadata:
      name: microservice-ingress
      annotations:
        kubernetes.io/ingress.class: nginx
    spec:
      rules:
        - host: myhost.com
          http:
            paths:
              - path: /microservice
                pathType: Prefix
                backend:
                  service:
                    name: microservice-cip
                    port:
                      number: 4000