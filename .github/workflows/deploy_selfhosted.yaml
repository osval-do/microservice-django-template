name: deploy_selfhosted

# Deploys the microservice as an image and updates kubernetes changes on
# the same location where the workflow is running.

on:
  workflow_run:
    workflows: ["test-backend"]
    branches: [main]
    types:
      - completed

jobs:
  production-deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # <- Only deploy if testing passed
    steps:
      - uses: actions/checkout@v3
      - run: docker build -t $IMAGE_NAME .
        env:
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_SERVER
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}      
          DOCKER_SERVER: ${{ secrets.DOCKER_SERVER }}      
      - run: docker push $IMAGE_NAME
        env:
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      - run: helm upgrade -n $MICROSERVICE_NAMESPACE --set LETS_ENCRYPT_EMAIL=$LETS_ENCRYPT_EMAIL,MICROSERVICE_NAME=$MICROSERVICE_NAME,MICROSERVICE_NAMESPACE=$MICROSERVICE_NAMESPACE,DJANGO_IMAGE_NAME=$DJANGO_IMAGE_NAME,SECRET_SETTINGS_NAME=$SECRET_SETTINGS_NAME,DOMAIN_NAME=$DOMAIN_NAME,COMMON_NAMESPACE=$COMMON_NAMESPACE $MICROSERVICE_NAME ./infrastructure/microservice -i
        env:
          MICROSERVICE_NAME: ${{ secrets.MICROSERVICE_NAME }}
          MICROSERVICE_NAMESPACE: ${{ secrets.MICROSERVICE_NAMESPACE }}
          LETS_ENCRYPT_EMAIL: ${{ secrets.LETS_ENCRYPT_EMAIL }}
          DJANGO_IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
          SECRET_SETTINGS_NAME: ${{ secrets.SECRET_SETTINGS_NAME }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          COMMON_NAMESPACE: ${{ secrets.COMMON_NAMESPACE }}



